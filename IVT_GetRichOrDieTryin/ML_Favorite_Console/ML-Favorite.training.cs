﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace ML_Favorite_Console
{
    public partial class ML_Favorite
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"schedule_playoff", @"schedule_playoff"),new InputOutputColumnPair(@"stadium_neutral", @"stadium_neutral")})      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"schedule_season", @"schedule_season"),new InputOutputColumnPair(@"schedule_week", @"schedule_week"),new InputOutputColumnPair(@"score_home", @"score_home"),new InputOutputColumnPair(@"score_away", @"score_away"),new InputOutputColumnPair(@"spread_favorite", @"spread_favorite"),new InputOutputColumnPair(@"weather_temperature", @"weather_temperature"),new InputOutputColumnPair(@"weather_wind_mph", @"weather_wind_mph"),new InputOutputColumnPair(@"weather_humidity", @"weather_humidity")}))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"schedule_date", @"schedule_date"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"team_home", @"team_home"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"team_away", @"team_away"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"team_favorite_id", @"team_favorite_id"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"stadium", @"stadium"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(@"weather_detail", @"weather_detail"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"schedule_playoff",@"stadium_neutral",@"schedule_season",@"schedule_week",@"score_home",@"score_away",@"spread_favorite",@"weather_temperature",@"weather_wind_mph",@"weather_humidity",@"schedule_date",@"team_home",@"team_away",@"team_favorite_id",@"stadium",@"weather_detail"}))      
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))      
                                    .Append(mlContext.Regression.Trainers.FastTreeTweedie(new FastTreeTweedieTrainer.Options(){NumberOfLeaves=10731,MinimumExampleCountPerLeaf=12,NumberOfTrees=10731,MaximumBinCountPerFeature=21,LearningRate=0.00163172971384635F,FeatureFraction=1F,LabelColumnName=@"over_under_line",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
